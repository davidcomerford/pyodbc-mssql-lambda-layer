name: Lambda Layer

on:
  push:
    tags: [ 'v*.*.*' ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [x86_64] # [x86_64, arm64]
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: ${{ matrix.architecture }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build the Docker image
      run: |
        docker buildx build --platform linux/${{ matrix.architecture }} --load --file Dockerfile --tag mssql-lambda-${{ matrix.architecture }} .

    - name: Create Container from Image
      run: |
        docker run --rm --volume $(pwd):/tmp mssql-lambda-${{ matrix.architecture }} cp /layer.zip /tmp/pyodbc-mssql-python312-${{ matrix.architecture }}.zip

    - name: Upload layer artifact
      uses: actions/upload-artifact@v4
      with:
        name: pyodbc-mssql-python312-${{ matrix.architecture }}.zip
        path: pyodbc-mssql-python312-${{ matrix.architecture }}.zip
        retention-days: 1

    - name: List artifacts
      run: ls -R

  create-release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: List artifacts
        run: ls -R

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: "pyodbc-mssql-python312-x86_64.zip"

      - name: List artifacts
        run: ls -R

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "*.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
